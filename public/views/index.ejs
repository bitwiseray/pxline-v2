<!DOCTYPE html>
<html lang="en" prefix="og: https://ogp.me/ns#">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <meta name="description" content="A minimalistic vanilla chat app made in Node.js" />
  <meta name="robots" content="follow, index" />
  <meta name="author" content="PxLine Team" />
  <meta name="theme-color" content="#7A2FFF" />
  <meta name="keywords" content="chat app, nodejs chat app" />
  <meta property="og:site_name" content="PxLine" />
  <meta property="og:image" content="/assets/preview-logo.jpg" />
  <meta name="mobile-web-app-capable" content="yes">
  <meta property="og:locale" content="en_US" />
  <title>PxLine â€” Chat</title>
  <link rel="icon" href="/public/assets/logo.jpg" type="image/x-icon" />
  <link rel="stylesheet" href="/public/css/style.css" />
  <link href='https://unpkg.com/boxicons@2.1.2/css/boxicons.min.css' rel='stylesheet'>
  <script src="https://kit.fontawesome.com/c0b785182d.js" crossorigin="anonymous"></script>
  <link rel="stylesheet" href="/public/css/toast.css">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.30.1/moment-with-locales.min.js"
    integrity="sha512-4F1cxYdMiAW98oomSLaygEwmCnIP38pb4Kx70yQYqRwLVCs3DbRumfBq82T08g/4LJ/smbFGFpmeFlQgoDccgg=="
    crossorigin="anonymous" referrerpolicy="no-referrer"></script>
</head>

<body>
  <div class="toast-container"></div>
  <div class="container">
    <header>
      <p class="logo">PxLine</p>
      <div class="action">
        <a href="#"><ion-icon name="search-outline"></ion-icon></a>
      </div>
    </header>
    <div class="underline"></div>
    <div class="tabs">
      <input id="chats" type="radio" name="group" checked>
      <input id="rooms" type="radio" name="group">
      <input id="settings" type="radio" name="group">

      <div class="quickBtn">
        <div class="btn message" onclick="location.href='#'"><ion-icon name="person-add-outline"></ion-icon></div>
        <div class="btn group" onclick="location.href='#'"><ion-icon name="add-circle-outline"></ion-icon></div>
      </div>

      <div class="nav">
        <div class="nav-content">
          <div class="nav-list">
            <a href="#" class="link-item active">
              <label for="chats"><i class='bx bxs-chat link-icon'></i></label>
              <span class="link-text">Chats</span>
            </a>
          </div>
          <div class="nav-list">
            <a href="#" class="link-item">
              <label for="rooms"><i class='bx bxs-group link-icon'></i></label>
              <span class="link-text">Rooms</span>
            </a>
          </div>
          <div class="nav-list" onclick="show_hide()">
            <a href="#" class="link-item">
              <label for="settings"><i class='bx bxs-cog link-icon'></i></label>
              <span class="link-text">Settings</span>
            </a>
          </div>
        </div>
      </div>
      <div class="content">
        <div class="box chats">
          <div class="data">
            <div class="chatlist"></div>
          </div>
        </div>
        <div class="box rooms">
          <div class="frem">
            <p>404</p>
            <h2>Look like developers are chilling</h2>
            <h5>the page you are looking for not avaible!</h5>
          </div>
        </div>
        <div class="box settings">
          <!-- Profile Section -->
          <div class="profile-card">
            <div class="image">
              <img src="/public/assets/profile-pic.png" alt="My image" class="profile-img">
            </div>
            <div class="text-data">
              <span class="name">Fin1te</span>
              <span class="user_id">Fin1te@01</span>
            </div>
            <!-- Buttons -->
            <div class="buttons">
              <form action="/logout?_method=DELETE" method="POST">
                <button type="submit" class="btn1">Logout</button>
              </form>

              <form action="/delete?_method=DELETE" method="POST">
                <button type="submit" class="btn2">Delete Account</button></a>
              </form>
            </div>
            <span id="line"></span>
            <!-- Description -->
            <div class="about">
              <p class="abt-text">
                <a href="">Developer Info</a>
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
    <script type="module" src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"></script>
    <script nomodule src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"></script>
    <script src="/scripts/chat-ui.js"></script>
    <script>
      let messages = <% -JSON.stringify(messages) %>;
      try {
        const rooms = <% -JSON.stringify(extrooms) %>;
        const extusers = <% -JSON.stringify(extusers) %>;
        const user = <% -JSON.stringify(user) %>;
        const lastMessages = <% -JSON.stringify(lastMessages) %>;
        function initTiles(rooms, users) {
          rooms.forEach(room => {
            createChatTile(room);
          });
          users.forEach(user => {
            createChatTile(user);
          });
        }
        function getLastFor(chatId) {
          return lastMessages.find(chat => chat.lastFor === chatId) || {};
        }
        initTiles(rooms, extusers);
        function createChatTile(entity) {
          if (!entity || !entity.chats) return;
          const chatBlock = document.createElement('div');
          chatBlock.classList.add('block', 'open');
          const imgBox = document.createElement('div');
          imgBox.classList.add('imgbx');
          const img = document.createElement('img');
          const nameElement = document.createElement('h4');
          if (entity.icon) {
            img.src = `${window.location.origin}/cdn/${entity.icon}`;
            imgBox.appendChild(img);
            nameElement.textContent = entity.title;
          } else if (entity.image) {
            img.src = `${window.location.origin}/cdn/${entity.image}`;
            imgBox.appendChild(img);
            nameElement.textContent = entity.display_name;
          }
          chatBlock.appendChild(imgBox);
          const details = document.createElement('div');
          const last = getLastFor(entity.chats.chat_id);
          details.classList.add('details');
          const listHead = document.createElement('div');
          listHead.classList.add('listHead');
          const timeElement = document.createElement('p');
          timeElement.classList.add('time');
          timeElement.textContent = formatTimestamp(last.createdAt || '1714548258854', true);
          listHead.appendChild(nameElement);
          listHead.appendChild(timeElement);
          details.appendChild(listHead);
          const messageP = document.createElement('div');
          messageP.classList.add('message_p');
          const messageElement = document.createElement('p');
          messageElement.textContent = `${last.sender === user.display_name ? 'You' : last.sender}: ${last.content}`;
          /*
          const unreadCountElement = document.createElement('b');
          unreadCountElement.textContent = 2;
          */
          messageP.appendChild(messageElement);
          // messageP.appendChild(unreadCountElement);
          details.appendChild(messageP);
          chatBlock.appendChild(details);
          const chatList = document.querySelector('.chatlist');
          chatBlock.setAttribute('data-id', entity._id);
          chatList.appendChild(chatBlock);
        }
        document.addEventListener('DOMContentLoaded', () => {
          const chatTiles = document.querySelectorAll('.block')
          chatTiles.forEach(tile => {
            tile.addEventListener('click', function () {
              const id = tile.getAttribute('data-id');
              window.location.href = `/chat/${id}`;
            });
          });
        });
      } catch (e) {
        console.error(e);
      }
    </script>
    <script src="/public/scripts/main.js"></script>
</body>

</html>